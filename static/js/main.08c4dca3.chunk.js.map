{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.js","components/NameSortLink.js","components/NameFilterInput.js","utils/compareNames.js","components/Thumbnail/index.js","components/Grid.js","components/EmployeeList.js","components/EmployeeTable.js","App.js","index.js"],"names":["Jumbotron","className","Nav","href","NameSortLink","props","onClick","toggleSortDirection","NameFilterInput","htmlFor","type","value","filterState","onChange","onFilterChange","name","id","compareNames","direction","employeeRecord1","employeeRecord2","name1","first","last","name2","result","Thumbnail","src","role","aria-label","style","backgroundImage","Container","fluid","children","Row","Col","size","split","map","join","EmployeeList","thumbnail","employeeRecord","picture","dateOfBirth","dob","date","slice","phone","EmployeeTable","employeeRecords","employees","useState","filteredEmployees","setFilteredEmployees","setSortedEmployees","setFilterState","sortDirection","setSortDirection","sort","useEffect","filteredRecords","filter","toLowerCase","startsWith","filteredEmployeesCopy","event","target","preventDefault","stopPropagation","App","employeeData","results","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08c4dca3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1>Employee Directory</h1>\n      <p>You can filter the list of employees by name by typng in the Filter List By Name field</p>\n      <p>You can sort the list on full name by clicking the Full Name header</p>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Employee Directory\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nfunction NameSortLink(props) {\n    return <a href=\"#home\" onClick={props.toggleSortDirection}>Full Name</a>;\n}\nexport default NameSortLink;","import React from \"react\";\nfunction NameFilterInput(props) {\n    return (\n        <div className=\"text-center\">\n            <label htmlFor=\"filter-input\">Filter List By Name&nbsp;</label>\n            <input \n            type=\"text\"\n            value={props.filterState}\n            onChange={props.onFilterChange}\n            name=\"filterInput\"\n            id=\"filter-input\" />\n        </div>\n    )\n}\nexport default NameFilterInput;","function compareNames(direction = 1) {\n    return function (employeeRecord1, employeeRecord2) {\n        // uncomment for ASCII char code fun!\n        // console.log(name1.charCodeAt(0));\n        // console.log(name2.charCodeAt(0));\n        const name1 =`${employeeRecord1.name.first} ${employeeRecord1.name.last}`;\n        const name2 =`${employeeRecord2.name.first} ${employeeRecord2.name.last}`;\n\n        let result = 0;\n        if(name1 > name2) {\n            result = 1;\n        } else if (name1 < name2) {\n            result = -1;\n        }\n        return result * direction;\n    }\n}\n\nexport default compareNames;","import React from \"react\";\nimport \"./style.css\";\n\n// The Thumbnail component renders a div that uses some CSS to render a background image\n// It will always keep square proportions at any size without the image warping\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\nfunction Thumbnail({ src }) {\n  return (\n    <div\n      className=\"thumbnail\"\n      role=\"img\"\n      aria-label=\"Employee Image\"\n      style={{\n        backgroundImage: `url(${src})`\n      }}\n    />\n  );\n}\n\nexport default Thumbnail;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport { Container, Row, Col } from \"./Grid\";\n\nexport function EmployeeList(props){\n    // console.log(props.employeeRecord.picture.thumbnail);\n    let thumbnail = props.employeeRecord.picture.thumbnail;\n    if (!props.employeeRecord.picture.thumbnail) {\n        thumbnail = \"https://via.placeholder.com/150\"\n    }\n    let dateOfBirth = props.employeeRecord.dob.date.slice(0,10);\n\n    return (\n        <li className=\"list-group-item\">\n            <Row>\n                <Col size=\"sm-3\">\n                    <Thumbnail src={thumbnail} />\n                </Col>\n                <Col size=\"sm-3\">\n                    <p>{props.employeeRecord.name.first} {props.employeeRecord.name.last}</p>\n                </Col>\n                <Col size=\"sm-3\">\n                    <p>{props.employeeRecord.phone}</p>\n                </Col>\n                <Col size=\"sm-3\">\n                    <p>{dateOfBirth}</p>\n                </Col>\n            </Row>\n        </li>\n    )\n}","import React, { useState, useEffect } from \"react\";\n// import EmployeeRow from \"./EmployeeRow\";\nimport NameSortLink from \"./NameSortLink\";\nimport NameFilterInput from \"./NameFilterInput\";\nimport compareNames from \"../utils/compareNames\";\nimport { EmployeeList } from \"./EmployeeList\";\nimport { Container, Row, Col } from \"./Grid\";\n\nfunction EmployeeTable(props) {\n    let employeeRecords = props.employees.slice(0);\n    const [filteredEmployees, setFilteredEmployees] = useState(props.employees);\n    const [sortedEmployees, setSortedEmployees] = useState(filteredEmployees);\n    const [filterState, setFilterState] = useState(\"\");\n    const [sortDirection, setSortDirection] = useState(1);\n\n    employeeRecords.sort(compareNames(1));\n\n    // Use effect goes from useEffect to componentDidMount (for startup)\n    // and your change function for each update\n    useEffect(function () {\n        let filteredRecords = props.employees;\n        if (filterState !== '') {\n            filteredRecords = props.employees\n                .filter(employeeRecord => {\n                    return employeeRecord.name.first.toLowerCase().startsWith(filterState)\n                        || employeeRecord.name.last.toLowerCase().startsWith(filterState);\n                });\n        }\n        setFilteredEmployees(filteredRecords);\n    }, [props.employees, filterState]);\n\n    useEffect(function () {\n        const filteredEmployeesCopy = filteredEmployees.slice(0);\n        filteredEmployeesCopy.sort(compareNames(sortDirection));\n        setSortedEmployees(filteredEmployeesCopy);\n    }, [filteredEmployees, sortDirection]);\n\n    // These stay basically the same. They just use this.setState\n    function onFilterChange(event) {\n        const { value } = event.target;\n        setFilterState(value);\n    }\n    function toggleSortDirection(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        setSortDirection(-1 * sortDirection);\n    }\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col size=\"md-12\">\n                    <NameFilterInput filterState={filterState} onFilterChange={onFilterChange}></NameFilterInput>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col size=\"sm-3\">\n                        <h3>Image</h3>\n                    </Col>\n                    <Col size=\"sm-3\">\n                        <h3><NameSortLink toggleSortDirection={toggleSortDirection} /></h3>\n                    </Col>\n                    <Col size=\"sm-3\">\n                        <h3>Phone</h3>\n                    </Col>\n                    <Col size=\"sm-3\">\n                        <h3>DOB</h3>\n                    </Col>\n                </Row>\n            {/* <HeaderRow> */}\n                <ul className=\"list-group\">\n                {\n                        employeeRecords.map(employeeRecord =>\n                            <EmployeeList employeeRecord={employeeRecord} key={employeeRecord.id.value} />)\n                    }\n            {/* </HeaderRow> */}\n            </ul>\n        </Container>\n    </div>\n    )\n}\n\nexport default EmployeeTable;","import React from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport EmployeeTable from \"./components/EmployeeTable\";\n\nimport employeeData from \"./employees.json\";\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Nav />\n      <Jumbotron />\n      <EmployeeTable employees={employeeData.results} />\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}